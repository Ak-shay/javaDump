package LLDQuestions;

import java.util.ArrayList;
import java.util.List;

/**
 * Design Split Wise
 * Requirements:
 * Add friends
 * create groups
 * add friends to groups
 * one-one transactions
 * group transactions
 * split capability - equal, unequal, % wise
 * Balance sheet
 * simplify feature
 */

/**
 * Splitwise driver
 * User
 * Group
 * Expense
 * split
 * balance sheet
 */

class User{
	String name;
	User(String name) {
		this.name = name;
	}
	
}

class UserManager {
	List<User> users;
	
	UserManager() {
		this.users = new ArrayList<User>();
	}
	
	void addUser(String name) {
		this.users.add(new User(name));
	}
}


enum SplitType {
	EQUAL,
	UNEQUAL,
	PERCENTAGE
}

class Split {
	User user;
	double amountOwe;
}

class Expense {
	String id;
	String description;
	User paidBy;
	double amount;
	List<User> to;
	SplitType type;
	List<Split> paidto;
}

class SplitwiseDriver {
	UserManager userManager;
	
	SplitwiseDriver() {
		this.userManager = new UserManager();
	}
	
	User addUser(String name) {
		this.userManager.addUser(name);
	}
	
	void createExpense(User paidBy, double amount, SplitType type, List<User> paidTo) {
		
	}
	
}


public class SplitWise {
	public static void main(String args[]) {
		SplitwiseDriver app = new SplitwiseDriver();
		User user1 = app.addUser("user1");
		User user2 = app.addUser("user2");
		User user3 = app.addUser("user3");
		
	}

}
